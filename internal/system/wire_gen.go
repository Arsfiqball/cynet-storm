// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package system

import (
	"app/internal/provider"
	"app/pkg/book"
	"context"
)

// Injectors from wire.go:

func New(ctx context.Context) (*App, error) {
	viper := provider.ProvideViper()
	db, err := provider.ProvideGorm(viper)
	if err != nil {
		return nil, err
	}
	bookRepository := book.NewBookRepository(db)
	bookService := book.NewBookService(bookRepository)
	bookHandler := book.NewBookHandler(bookService)
	fiberHandlerSet := &provider.FiberHandlerSet{
		BookHandler: bookHandler,
	}
	app := provider.NewFiber(fiberHandlerSet)
	bookSet := &provider.BookSet{
		BookRepository: bookRepository,
		BookService:    bookService,
		BookHandler:    bookHandler,
	}
	systemApp := &App{
		FiberApp:    app,
		GormDb:      db,
		ViperConfig: viper,
		BookSet:     bookSet,
	}
	return systemApp, nil
}
